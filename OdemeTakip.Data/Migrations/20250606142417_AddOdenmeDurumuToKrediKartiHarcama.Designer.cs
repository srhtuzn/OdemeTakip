// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OdemeTakip.Data;

#nullable disable

namespace OdemeTakip.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250606142417_AddOdenmeDurumuToKrediKartiHarcama")]
    partial class AddOdenmeDurumuToKrediKartiHarcama
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CariFirma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Banka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CariKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iban")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxOffice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CariFirmalar");
                });

            modelBuilder.Entity("KrediTaksit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KrediId")
                        .HasColumnType("int");

                    b.Property<string>("KrediKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeBankasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OdenmeDurumu")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OdenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OdeyenKullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaksitNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("KrediId");

                    b.ToTable("KrediTaksitler");
                });

            modelBuilder.Entity("OdemeTakip.Entities.Banka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Bankalar");
                });

            modelBuilder.Entity("OdemeTakip.Entities.BankaHesabi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("HesapKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HesapSahibi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("BankaHesaplari");
                });

            modelBuilder.Entity("OdemeTakip.Entities.Cek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Banka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CariFirmaId")
                        .HasColumnType("int");

                    b.Property<string>("CekKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CekNumarasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CekTuru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeBankasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OdenmeDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("OdeyenKullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParaBirimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SirketAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TahsilEdildiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TahsilTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("VadeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CariFirmaId");

                    b.ToTable("Cekler");
                });

            modelBuilder.Entity("OdemeTakip.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorizedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SirketKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("OdemeTakip.Entities.DegiskenOdeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CariFirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FaturaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiderTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OdemeBankasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OdenmeDurumu")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OdenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OdeyenKullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CariFirmaId");

                    b.HasIndex("CompanyId");

                    b.ToTable("DegiskenOdemeler");
                });

            modelBuilder.Entity("OdemeTakip.Entities.DegiskenOdemeSablonu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CariFirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("GiderTuru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gun")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OdeyenKullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CariFirmaId");

                    b.HasIndex("CompanyId");

                    b.ToTable("DegiskenOdemeSablonlari");
                });

            modelBuilder.Entity("OdemeTakip.Entities.GenelOdeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CariFirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FaturaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOdedildiMi")
                        .HasColumnType("bit");

                    b.Property<string>("OdemeAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeBankasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("OdeyenKullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParaBirimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CariFirmaId");

                    b.HasIndex("CompanyId");

                    b.ToTable("GenelOdemeler");
                });

            modelBuilder.Entity("OdemeTakip.Entities.Kredi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AylikTaksitTutari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Banka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("KalanTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("KrediKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KrediKonusu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OdenenTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("OdenmeDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("ParaBirimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SirketAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaksitSayisi")
                        .HasColumnType("int");

                    b.Property<decimal>("ToplamTutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Krediler");
                });

            modelBuilder.Entity("OdemeTakip.Entities.KrediKarti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Banka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumberLast4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("KrediKartlari");
                });

            modelBuilder.Entity("OdemeTakip.Entities.KrediKartiHarcama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HarcamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("KrediKartiId")
                        .HasColumnType("int");

                    b.Property<bool>("OdenmeDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaksitSayisi")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("KrediKartiId");

                    b.ToTable("KrediKartiHarcamalari");
                });

            modelBuilder.Entity("OdemeTakip.Entities.KrediKartiOdeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Banka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IlkOdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KartAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KrediKartiHarcamaId")
                        .HasColumnType("int");

                    b.Property<int?>("KrediKartiId")
                        .HasColumnType("int");

                    b.Property<string>("OdemeBankasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OdenmeDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("OdeyenKullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaksitNo")
                        .HasColumnType("int");

                    b.Property<int?>("ToplamTaksit")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("KrediKartiHarcamaId");

                    b.HasIndex("KrediKartiId");

                    b.ToTable("KrediKartiOdemeleri");
                });

            modelBuilder.Entity("OdemeTakip.Entities.PaymentSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentSources");
                });

            modelBuilder.Entity("OdemeTakip.Entities.SabitGider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CariFirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FaturaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiderAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OdemeKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OdendiMi")
                        .HasColumnType("bit");

                    b.Property<string>("OdeyenKullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OtomatikMi")
                        .HasColumnType("bit");

                    b.Property<string>("ParaBirimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Periyot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CariFirmaId");

                    b.HasIndex("CompanyId");

                    b.ToTable("SabitGiderler");
                });

            modelBuilder.Entity("OdemeTakip.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetCodeExpiry")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KrediTaksit", b =>
                {
                    b.HasOne("OdemeTakip.Entities.Kredi", "Kredi")
                        .WithMany("Taksitler")
                        .HasForeignKey("KrediId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kredi");
                });

            modelBuilder.Entity("OdemeTakip.Entities.BankaHesabi", b =>
                {
                    b.HasOne("OdemeTakip.Entities.Company", "Company")
                        .WithMany("BankaHesaplari")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OdemeTakip.Entities.Cek", b =>
                {
                    b.HasOne("CariFirma", "CariFirma")
                        .WithMany()
                        .HasForeignKey("CariFirmaId");

                    b.Navigation("CariFirma");
                });

            modelBuilder.Entity("OdemeTakip.Entities.DegiskenOdeme", b =>
                {
                    b.HasOne("CariFirma", "CariFirma")
                        .WithMany()
                        .HasForeignKey("CariFirmaId");

                    b.HasOne("OdemeTakip.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("CariFirma");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OdemeTakip.Entities.DegiskenOdemeSablonu", b =>
                {
                    b.HasOne("CariFirma", "CariFirma")
                        .WithMany()
                        .HasForeignKey("CariFirmaId");

                    b.HasOne("OdemeTakip.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("CariFirma");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OdemeTakip.Entities.GenelOdeme", b =>
                {
                    b.HasOne("CariFirma", "CariFirma")
                        .WithMany()
                        .HasForeignKey("CariFirmaId");

                    b.HasOne("OdemeTakip.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("CariFirma");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OdemeTakip.Entities.KrediKarti", b =>
                {
                    b.HasOne("OdemeTakip.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OdemeTakip.Entities.KrediKartiHarcama", b =>
                {
                    b.HasOne("OdemeTakip.Entities.KrediKarti", "KrediKarti")
                        .WithMany()
                        .HasForeignKey("KrediKartiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KrediKarti");
                });

            modelBuilder.Entity("OdemeTakip.Entities.KrediKartiOdeme", b =>
                {
                    b.HasOne("OdemeTakip.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("OdemeTakip.Entities.KrediKartiHarcama", "KrediKartiHarcama")
                        .WithMany()
                        .HasForeignKey("KrediKartiHarcamaId");

                    b.HasOne("OdemeTakip.Entities.KrediKarti", "KrediKarti")
                        .WithMany()
                        .HasForeignKey("KrediKartiId");

                    b.Navigation("Company");

                    b.Navigation("KrediKarti");

                    b.Navigation("KrediKartiHarcama");
                });

            modelBuilder.Entity("OdemeTakip.Entities.SabitGider", b =>
                {
                    b.HasOne("CariFirma", "CariFirma")
                        .WithMany()
                        .HasForeignKey("CariFirmaId");

                    b.HasOne("OdemeTakip.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("CariFirma");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OdemeTakip.Entities.Company", b =>
                {
                    b.Navigation("BankaHesaplari");
                });

            modelBuilder.Entity("OdemeTakip.Entities.Kredi", b =>
                {
                    b.Navigation("Taksitler");
                });
#pragma warning restore 612, 618
        }
    }
}
